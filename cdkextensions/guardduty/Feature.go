package guardduty

import (
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"
	_init_ "github.com/vibe-io/cdk-extensions-go/cdkextensions/jsii"
)

// A feature that will be configured for a GuardDuty detector.
type Feature interface {
}

// The jsii proxy struct for Feature
type jsiiProxy_Feature struct {
	_ byte // padding
}

func NewFeature() Feature {
	_init_.Initialize()

	j := jsiiProxy_Feature{}

	_jsii_.Create(
		"cdk-extensions.guardduty.Feature",
		nil, // no parameters
		&j,
	)

	return &j
}

func NewFeature_Override(f Feature) {
	_init_.Initialize()

	_jsii_.Create(
		"cdk-extensions.guardduty.Feature",
		nil, // no parameters
		f,
	)
}

// Controls whether GuardDuty should scan the EBS volumes associated with EC2 instances for malware and report the results.
//
// Returns: An object representing the configured feature.
// See: [GuardDuty Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html)
//
func Feature_EbsMalwareProtection(options *FeatureOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_EbsMalwareProtectionParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"ebsMalwareProtection",
		[]interface{}{options},
		&returns,
	)

	return returns
}

// Helps you detect potentially suspicious activities in your EKS clusters within Amazon Elastic Kubernetes Service by monitoring the audit logs generated by your clusters.
//
// Returns: An object representing the configured feature.
// See: [EKS Audit Log Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-eks-audit-log-monitoring.html)
//
func Feature_EksAuditLogs(options *FeatureOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_EksAuditLogsParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"eksAuditLogs",
		[]interface{}{options},
		&returns,
	)

	return returns
}

// EKS Runtime Monitoring provides runtime threat detection coverage for Amazon Elastic Kubernetes Service (Amazon EKS) nodes and containers within your AWS environment.
//
// EKS Runtime Monitoring uses a new GuardDuty security
// agent that adds runtime visibility into individual EKS workloads, for
// example, file access, process execution, and network connections.
//
// Returns: An object representing the configured feature.
// See: [EKS Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-eks-runtime-monitoring.html)
//
func Feature_EksRuntimeMonitoring(options *EksRuntimeMonitoringOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_EksRuntimeMonitoringParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"eksRuntimeMonitoring",
		[]interface{}{options},
		&returns,
	)

	return returns
}

// Lambda Protection helps you identify potential security threats when an AWS Lambda function gets invoked in your AWS environment.
//
// When you enable
// Lambda Protection, GuardDuty starts monitoring Lambda network activity
// logs, starting with VPC Flow Logs from all Lambda functions for account,
// including those logs that don't use VPC networking, and are generated when
// the Lambda function gets invoked.
//
// Returns: An object representing the configured feature.
// See: [GuardDuty Lambda Protection](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-eks-runtime-monitoring.html)
//
func Feature_LambdaNetworkLogs(options *FeatureOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_LambdaNetworkLogsParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"lambdaNetworkLogs",
		[]interface{}{options},
		&returns,
	)

	return returns
}

// RDS Protection in Amazon GuardDuty analyzes and profiles RDS login activity for potential access threats to your Amazon Aurora databases (Amazon Aurora MySQL-Compatible Edition and Aurora PostgreSQL-Compatible Edition).
//
// Returns: An object representing the configured feature.
// See: [GuardDuty RDS Protection](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-eks-runtime-monitoring.html)
//
func Feature_RdsLoginEvents(options *FeatureOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_RdsLoginEventsParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"rdsLoginEvents",
		[]interface{}{options},
		&returns,
	)

	return returns
}

// S3 protection enables Amazon GuardDuty to monitor object-level API operations to identify potential security risks for data within your S3 buckets.
//
// Returns: An object representing the configured feature.
// See: [GuardDuty S3 Protection](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-eks-runtime-monitoring.html)
//
func Feature_S3DataEvents(options *FeatureOptions) IFeature {
	_init_.Initialize()

	if err := validateFeature_S3DataEventsParameters(options); err != nil {
		panic(err)
	}
	var returns IFeature

	_jsii_.StaticInvoke(
		"cdk-extensions.guardduty.Feature",
		"s3DataEvents",
		[]interface{}{options},
		&returns,
	)

	return returns
}

